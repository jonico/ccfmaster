// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.collabnet.ccf.ccfmaster.server.domain;

import com.collabnet.ccf.ccfmaster.server.domain.Direction;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect DirectionDataOnDemand_Roo_DataOnDemand {
    
    declare @type: DirectionDataOnDemand: @Component;
    
    private Random DirectionDataOnDemand.rnd = new java.security.SecureRandom();
    
    private void DirectionDataOnDemand.setDescription(Direction obj, int index) {
        java.lang.String description = "description_" + index;
        obj.setDescription(description);
    }
    
    private void DirectionDataOnDemand.setDirection(Direction obj, int index) {
        com.collabnet.ccf.ccfmaster.server.domain.Directions direction = com.collabnet.ccf.ccfmaster.server.domain.Directions.class.getEnumConstants()[0];
        obj.setDirection(direction);
    }
    
    private void DirectionDataOnDemand.setLandscape(Direction obj, int index) {
        com.collabnet.ccf.ccfmaster.server.domain.Landscape landscape = landscapeDataOnDemand.getRandomLandscape();
        obj.setLandscape(landscape);
    }
    
    private void DirectionDataOnDemand.setShouldStartAutomatically(Direction obj, int index) {
        java.lang.Boolean shouldStartAutomatically = false;
        obj.setShouldStartAutomatically(shouldStartAutomatically);
    }
    
    public Direction DirectionDataOnDemand.getSpecificDirection(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Direction obj = data.get(index);
        return Direction.findDirection(obj.getId());
    }
    
    public Direction DirectionDataOnDemand.getRandomDirection() {
        init();
        Direction obj = data.get(rnd.nextInt(data.size()));
        return Direction.findDirection(obj.getId());
    }
    
    public boolean DirectionDataOnDemand.modifyDirection(Direction obj) {
        return false;
    }
    
}
