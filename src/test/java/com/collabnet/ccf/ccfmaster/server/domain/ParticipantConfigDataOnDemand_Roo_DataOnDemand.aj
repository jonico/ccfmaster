// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.collabnet.ccf.ccfmaster.server.domain;

import com.collabnet.ccf.ccfmaster.server.domain.ParticipantConfig;
import com.collabnet.ccf.ccfmaster.server.domain.ParticipantDataOnDemand;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect ParticipantConfigDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ParticipantConfigDataOnDemand: @Component;
    
    private Random ParticipantConfigDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<ParticipantConfig> ParticipantConfigDataOnDemand.data;
    
    @Autowired
    private ParticipantDataOnDemand ParticipantConfigDataOnDemand.participantDataOnDemand;
    
    public ParticipantConfig ParticipantConfigDataOnDemand.getNewTransientParticipantConfig(int index) {
        com.collabnet.ccf.ccfmaster.server.domain.ParticipantConfig obj = new com.collabnet.ccf.ccfmaster.server.domain.ParticipantConfig();
        setParticipant(obj, index);
        setName(obj, index);
        setVal(obj, index);
        return obj;
    }
    
    private void ParticipantConfigDataOnDemand.setParticipant(ParticipantConfig obj, int index) {
        com.collabnet.ccf.ccfmaster.server.domain.Participant participant = participantDataOnDemand.getRandomParticipant();
        obj.setParticipant(participant);
    }
    
    private void ParticipantConfigDataOnDemand.setName(ParticipantConfig obj, int index) {
        java.lang.String name = "name_" + index;
        obj.setName(name);
    }
    
    private void ParticipantConfigDataOnDemand.setVal(ParticipantConfig obj, int index) {
        java.lang.String val = "val_" + index;
        if (val.length() > 10485760) {
            val = val.substring(0, 10485760);
        }
        obj.setVal(val);
    }
    
    public ParticipantConfig ParticipantConfigDataOnDemand.getSpecificParticipantConfig(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        ParticipantConfig obj = data.get(index);
        return ParticipantConfig.findParticipantConfig(obj.getId());
    }
    
    public ParticipantConfig ParticipantConfigDataOnDemand.getRandomParticipantConfig() {
        init();
        ParticipantConfig obj = data.get(rnd.nextInt(data.size()));
        return ParticipantConfig.findParticipantConfig(obj.getId());
    }
    
    public boolean ParticipantConfigDataOnDemand.modifyParticipantConfig(ParticipantConfig obj) {
        return false;
    }
    
    public void ParticipantConfigDataOnDemand.init() {
        data = com.collabnet.ccf.ccfmaster.server.domain.ParticipantConfig.findParticipantConfigEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'ParticipantConfig' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.collabnet.ccf.ccfmaster.server.domain.ParticipantConfig>();
        for (int i = 0; i < 10; i++) {
            com.collabnet.ccf.ccfmaster.server.domain.ParticipantConfig obj = getNewTransientParticipantConfig(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
