// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.collabnet.ccf.ccfmaster.server.domain;

import com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMapEntry;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect FieldMappingValueMapEntryDataOnDemand_Roo_DataOnDemand {
    
    declare @type: FieldMappingValueMapEntryDataOnDemand: @Component;
    
    private Random FieldMappingValueMapEntryDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<FieldMappingValueMapEntry> FieldMappingValueMapEntryDataOnDemand.data;
    
    public FieldMappingValueMapEntry FieldMappingValueMapEntryDataOnDemand.getNewTransientFieldMappingValueMapEntry(int index) {
        com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMapEntry obj = new com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMapEntry();
        setSource(obj, index);
        setTarget(obj, index);
        return obj;
    }
    
    private void FieldMappingValueMapEntryDataOnDemand.setSource(FieldMappingValueMapEntry obj, int index) {
        java.lang.String source = "source_" + index;
        obj.setSource(source);
    }
    
    private void FieldMappingValueMapEntryDataOnDemand.setTarget(FieldMappingValueMapEntry obj, int index) {
        java.lang.String target = "target_" + index;
        obj.setTarget(target);
    }
    
    public FieldMappingValueMapEntry FieldMappingValueMapEntryDataOnDemand.getSpecificFieldMappingValueMapEntry(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        FieldMappingValueMapEntry obj = data.get(index);
        return FieldMappingValueMapEntry.findFieldMappingValueMapEntry(obj.getId());
    }
    
    public FieldMappingValueMapEntry FieldMappingValueMapEntryDataOnDemand.getRandomFieldMappingValueMapEntry() {
        init();
        FieldMappingValueMapEntry obj = data.get(rnd.nextInt(data.size()));
        return FieldMappingValueMapEntry.findFieldMappingValueMapEntry(obj.getId());
    }
    
    public boolean FieldMappingValueMapEntryDataOnDemand.modifyFieldMappingValueMapEntry(FieldMappingValueMapEntry obj) {
        return false;
    }
    
    public void FieldMappingValueMapEntryDataOnDemand.init() {
        data = com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMapEntry.findFieldMappingValueMapEntryEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'FieldMappingValueMapEntry' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMapEntry>();
        for (int i = 0; i < 10; i++) {
            com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMapEntry obj = getNewTransientFieldMappingValueMapEntry(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
