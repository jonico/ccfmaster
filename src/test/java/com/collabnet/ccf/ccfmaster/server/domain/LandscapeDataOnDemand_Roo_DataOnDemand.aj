// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.collabnet.ccf.ccfmaster.server.domain;

import com.collabnet.ccf.ccfmaster.server.domain.Landscape;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect LandscapeDataOnDemand_Roo_DataOnDemand {
    
    declare @type: LandscapeDataOnDemand: @Component;
    
    private Random LandscapeDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Landscape> LandscapeDataOnDemand.data;
    
    private void LandscapeDataOnDemand.setName(Landscape obj, int index) {
        java.lang.String name = "name_" + index;
        obj.setName(name);
    }
    
    private void LandscapeDataOnDemand.setTeamForge(Landscape obj, int index) {
        com.collabnet.ccf.ccfmaster.server.domain.Participant teamForge = participantDataOnDemand.getRandomParticipant();
        obj.setTeamForge(teamForge);
    }
    
    private void LandscapeDataOnDemand.setParticipant(Landscape obj, int index) {
        com.collabnet.ccf.ccfmaster.server.domain.Participant participant = participantDataOnDemand.getRandomParticipant();
        obj.setParticipant(participant);
    }
    
    private void LandscapeDataOnDemand.setPlugId(Landscape obj, int index) {
        java.lang.String plugId = "plugId_" + index;
        obj.setPlugId(plugId);
    }
    
    public Landscape LandscapeDataOnDemand.getSpecificLandscape(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Landscape obj = data.get(index);
        return Landscape.findLandscape(obj.getId());
    }
    
    public Landscape LandscapeDataOnDemand.getRandomLandscape() {
        init();
        Landscape obj = data.get(rnd.nextInt(data.size()));
        return Landscape.findLandscape(obj.getId());
    }
    
    public void LandscapeDataOnDemand.init() {
        data = com.collabnet.ccf.ccfmaster.server.domain.Landscape.findLandscapeEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Landscape' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.collabnet.ccf.ccfmaster.server.domain.Landscape>();
        for (int i = 0; i < 10; i++) {
            com.collabnet.ccf.ccfmaster.server.domain.Landscape obj = getNewTransientLandscape(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
