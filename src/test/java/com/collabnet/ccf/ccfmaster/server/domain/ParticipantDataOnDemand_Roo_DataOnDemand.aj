// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.collabnet.ccf.ccfmaster.server.domain;

import com.collabnet.ccf.ccfmaster.server.domain.Participant;
import java.util.List;
import org.springframework.stereotype.Component;

privileged aspect ParticipantDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ParticipantDataOnDemand: @Component;
    
    private List<Participant> ParticipantDataOnDemand.data;
    
    private void ParticipantDataOnDemand.setDescription(Participant obj, int index) {
        java.lang.String description = "description_" + index;
        obj.setDescription(description);
    }
    
    private void ParticipantDataOnDemand.setSystemId(Participant obj, int index) {
        java.lang.String systemId = "systemId_" + index;
        if (systemId.length() > 128) {
            systemId = systemId.substring(0, 128);
        }
        obj.setSystemId(systemId);
    }
    
    private void ParticipantDataOnDemand.setEncoding(Participant obj, int index) {
        java.lang.String encoding = "encoding_" + index;
        if (encoding.length() > 128) {
            encoding = encoding.substring(0, 128);
        }
        obj.setEncoding(encoding);
    }
    
    private void ParticipantDataOnDemand.setTimezone(Participant obj, int index) {
        com.collabnet.ccf.ccfmaster.server.domain.Timezone timezone = com.collabnet.ccf.ccfmaster.server.domain.Timezone.class.getEnumConstants()[0];
        obj.setTimezone(timezone);
    }
    
    private void ParticipantDataOnDemand.setSystemKind(Participant obj, int index) {
        com.collabnet.ccf.ccfmaster.server.domain.SystemKind systemKind = com.collabnet.ccf.ccfmaster.server.domain.SystemKind.class.getEnumConstants()[0];
        obj.setSystemKind(systemKind);
    }
    
    private void ParticipantDataOnDemand.setPrefix(Participant obj, int index) {
        java.lang.String prefix = "prefix_" + index;
        obj.setPrefix(prefix);
    }
    
    public Participant ParticipantDataOnDemand.getSpecificParticipant(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Participant obj = data.get(index);
        return Participant.findParticipant(obj.getId());
    }
    
    public Participant ParticipantDataOnDemand.getRandomParticipant() {
        init();
        Participant obj = data.get(rnd.nextInt(data.size()));
        return Participant.findParticipant(obj.getId());
    }
    
    public boolean ParticipantDataOnDemand.modifyParticipant(Participant obj) {
        return false;
    }
    
    public void ParticipantDataOnDemand.init() {
        data = com.collabnet.ccf.ccfmaster.server.domain.Participant.findParticipantEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Participant' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.collabnet.ccf.ccfmaster.server.domain.Participant>();
        for (int i = 0; i < 10; i++) {
            com.collabnet.ccf.ccfmaster.server.domain.Participant obj = getNewTransientParticipant(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
