// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.collabnet.ccf.ccfmaster.server.domain;

import com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMap;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect FieldMappingValueMapDataOnDemand_Roo_DataOnDemand {
    
    declare @type: FieldMappingValueMapDataOnDemand: @Component;
    
    private Random FieldMappingValueMapDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<FieldMappingValueMap> FieldMappingValueMapDataOnDemand.data;
    
    public FieldMappingValueMap FieldMappingValueMapDataOnDemand.getNewTransientFieldMappingValueMap(int index) {
        com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMap obj = new com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMap();
        setName(obj, index);
        setDefaultValue(obj, index);
        setHasDefault(obj, index);
        return obj;
    }
    
    private void FieldMappingValueMapDataOnDemand.setName(FieldMappingValueMap obj, int index) {
        java.lang.String name = "name_" + index;
        obj.setName(name);
    }
    
    private void FieldMappingValueMapDataOnDemand.setDefaultValue(FieldMappingValueMap obj, int index) {
        java.lang.String defaultValue = "defaultValue_" + index;
        obj.setDefaultValue(defaultValue);
    }
    
    private void FieldMappingValueMapDataOnDemand.setHasDefault(FieldMappingValueMap obj, int index) {
        java.lang.Boolean hasDefault = true;
        obj.setHasDefault(hasDefault);
    }
    
    public FieldMappingValueMap FieldMappingValueMapDataOnDemand.getSpecificFieldMappingValueMap(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        FieldMappingValueMap obj = data.get(index);
        return FieldMappingValueMap.findFieldMappingValueMap(obj.getId());
    }
    
    public FieldMappingValueMap FieldMappingValueMapDataOnDemand.getRandomFieldMappingValueMap() {
        init();
        FieldMappingValueMap obj = data.get(rnd.nextInt(data.size()));
        return FieldMappingValueMap.findFieldMappingValueMap(obj.getId());
    }
    
    public boolean FieldMappingValueMapDataOnDemand.modifyFieldMappingValueMap(FieldMappingValueMap obj) {
        return false;
    }
    
    public void FieldMappingValueMapDataOnDemand.init() {
        data = com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMap.findFieldMappingValueMapEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'FieldMappingValueMap' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMap>();
        for (int i = 0; i < 10; i++) {
            com.collabnet.ccf.ccfmaster.server.domain.FieldMappingValueMap obj = getNewTransientFieldMappingValueMap(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
