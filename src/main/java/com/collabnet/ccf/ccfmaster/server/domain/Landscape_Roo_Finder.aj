// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.collabnet.ccf.ccfmaster.server.domain;

import com.collabnet.ccf.ccfmaster.server.domain.Landscape;
import com.collabnet.ccf.ccfmaster.server.domain.Participant;
import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Landscape_Roo_Finder {
    
    public static TypedQuery<Landscape> Landscape.findLandscapesByPlugIdEquals(String plugId) {
        if (plugId == null || plugId.length() == 0) throw new IllegalArgumentException("The plugId argument is required");
        EntityManager em = Landscape.entityManager();
        TypedQuery<Landscape> q = em.createQuery("SELECT o FROM Landscape AS o WHERE o.plugId = :plugId", Landscape.class);
        q.setParameter("plugId", plugId);
        return q;
    }
    
    public static TypedQuery<Landscape> Landscape.findLandscapesByTeamForgeOrParticipant(Participant teamForge, Participant participant) {
        if (teamForge == null) throw new IllegalArgumentException("The teamForge argument is required");
        if (participant == null) throw new IllegalArgumentException("The participant argument is required");
        EntityManager em = Landscape.entityManager();
        TypedQuery<Landscape> q = em.createQuery("SELECT o FROM Landscape AS o WHERE o.teamForge = :teamForge OR o.participant = :participant", Landscape.class);
        q.setParameter("teamForge", teamForge);
        q.setParameter("participant", participant);
        return q;
    }
    
}
