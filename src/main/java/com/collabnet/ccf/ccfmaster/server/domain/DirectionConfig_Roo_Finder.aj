// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.collabnet.ccf.ccfmaster.server.domain;

import com.collabnet.ccf.ccfmaster.server.domain.Direction;
import com.collabnet.ccf.ccfmaster.server.domain.DirectionConfig;
import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect DirectionConfig_Roo_Finder {
    
    public static TypedQuery<DirectionConfig> DirectionConfig.findDirectionConfigsByDirection(Direction direction) {
        if (direction == null) throw new IllegalArgumentException("The direction argument is required");
        EntityManager em = DirectionConfig.entityManager();
        TypedQuery<DirectionConfig> q = em.createQuery("SELECT o FROM DirectionConfig AS o WHERE o.direction = :direction", DirectionConfig.class);
        q.setParameter("direction", direction);
        return q;
    }
    
    public static TypedQuery<DirectionConfig> DirectionConfig.findDirectionConfigsByDirectionAndName(Direction direction, String name) {
        if (direction == null) throw new IllegalArgumentException("The direction argument is required");
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        EntityManager em = DirectionConfig.entityManager();
        TypedQuery<DirectionConfig> q = em.createQuery("SELECT o FROM DirectionConfig AS o WHERE o.direction = :direction AND o.name = :name", DirectionConfig.class);
        q.setParameter("direction", direction);
        q.setParameter("name", name);
        return q;
    }
    
}
